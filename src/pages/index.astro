---
import { getCollection } from 'astro:content';
import BaseLayout from '../layouts/BaseLayout.astro';

const title = "Mengkeat's Digital Garden";
const description = "A personal blog featuring daily thoughts and explorations in technology, programming, and life.";

const allPosts = await getCollection('blog', ({ data }) => {
  return data.draft !== true;
});

const recentPosts = allPosts
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .slice(0, 4);
---

<BaseLayout title={title} description={description}>
  <!-- Hero Section -->
  <section class="mb-16">
    <div class="text-center mb-12">
      <h1 class="text-4xl md:text-5xl font-light text-stone-900 mb-6 leading-tight-heading tracking-slight">
        Welcome to my 
        <span class="text-amber-600 font-medium">digital garden</span>
      </h1>
      <p class="text-xl text-stone-600 max-w-2xl mx-auto leading-relaxed-reading">
        A place where ideas grow, thoughts crystallize, and learning never stops. I share daily insights, technical explorations, and moments of discovery.
      </p>
    </div>
  </section>

  <!-- Recent Posts Section -->
  <section class="mb-20">
    <div class="flex items-center justify-between mb-12">
      <h2 class="text-2xl font-medium text-stone-900">Recent Thoughts</h2>
      <a href="/blog" class="text-amber-600 hover:text-amber-700 font-medium transition-colors duration-200 flex items-center">
        View all posts
        <svg class="ml-2 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
        </svg>
      </a>
    </div>
    
    <div class="grid gap-8 md:gap-12">
      {recentPosts.map((post, index) => (
        <article class="group">
          <div class="flex flex-col md:flex-row md:items-start gap-6">
            <div class="md:w-32 flex-shrink-0">
              <time class="text-sm text-stone-500 font-medium" datetime={post.data.pubDate.toISOString()}>
                {post.data.pubDate.toLocaleDateString('en-US', {
                  month: 'short',
                  day: 'numeric',
                  year: 'numeric',
                })}
              </time>
            </div>
            <div class="flex-1">
              <h3 class="text-xl font-medium text-stone-900 mb-3 leading-tight-heading">
                <a href={`/blog/${post.slug}`} class="group-hover:text-amber-700 transition-colors duration-200">
                  {post.data.title}
                </a>
              </h3>
              <p class="text-stone-600 mb-4 leading-relaxed-reading">
                {post.data.description}
              </p>
              {post.data.tags && post.data.tags.length > 0 && (
                <div class="flex flex-wrap gap-2">
                  {post.data.tags.slice(0, 3).map((tag) => (
                    <a href={`/tags/${tag}`} class="inline-block bg-warm-100 text-stone-600 text-sm px-3 py-1 rounded-full hover:bg-warm-200 transition-colors duration-200">
                      {tag}
                    </a>
                  ))}
                </div>
              )}
            </div>
          </div>
        </article>
      ))}
    </div>
  </section>

  <!-- TIL Preview Section -->
  <section class="mb-20">
    <div class="flex items-center justify-between mb-12">
      <h2 class="text-2xl font-medium text-stone-900">Today I Learned</h2>
      <a href="/til" class="text-amber-600 hover:text-amber-700 font-medium transition-colors duration-200 flex items-center">
        View all TILs
        <svg class="ml-2 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
        </svg>
      </a>
    </div>
    
    <div class="grid gap-6 md:grid-cols-2">
      <!-- TIL Entry 1 -->
      <article class="group p-6 bg-white rounded-lg border border-stone-200/60 hover:border-amber-200 hover:shadow-sm transition-all duration-200">
        <div class="mb-3">
          <time class="text-sm text-stone-500 font-medium" datetime="2025-08-24">Aug 24</time>
        </div>
        <h3 class="text-lg font-medium text-stone-900 mb-3 leading-tight-heading">
          <a href="/til/css-has-selector" class="group-hover:text-amber-700 transition-colors duration-200">
            CSS :has() Pseudo-class
          </a>
        </h3>
        <p class="text-stone-600 mb-4 leading-relaxed-reading">
          The :has() pseudo-class allows you to style an element based on its descendants. It's like "parent selectors" in CSS!
        </p>
        <div class="flex gap-2">
          <span class="inline-block bg-amber-50 text-amber-700 text-sm px-3 py-1 rounded-full">CSS</span>
        </div>
      </article>

      <!-- TIL Entry 2 -->
      <article class="group p-6 bg-white rounded-lg border border-stone-200/60 hover:border-amber-200 hover:shadow-sm transition-all duration-200">
        <div class="mb-3">
          <time class="text-sm text-stone-500 font-medium" datetime="2025-08-23">Aug 23</time>
        </div>
        <h3 class="text-lg font-medium text-stone-900 mb-3 leading-tight-heading">
          <a href="/til/python-walrus-operator" class="group-hover:text-amber-700 transition-colors duration-200">
            Python Walrus Operator (:=)
          </a>
        </h3>
        <p class="text-stone-600 mb-4 leading-relaxed-reading">
          Assignment expressions allow you to assign and return a value in the same expression. Super useful in list comprehensions!
        </p>
        <div class="flex gap-2">
          <span class="inline-block bg-amber-50 text-amber-700 text-sm px-3 py-1 rounded-full">Python</span>
        </div>
      </article>
    </div>
  </section>

  <!-- About Section -->
  <section class="mb-16">
    <div class="p-8 bg-gradient-to-r from-warm-50 to-amber-50/30 rounded-xl border border-warm-200/60">
      <div class="max-w-3xl">
        <h2 class="text-2xl font-medium text-stone-900 mb-4">About This Space</h2>
        <p class="text-stone-600 leading-relaxed-reading mb-4">
          This blog is my digital gardenâ€”a space where I cultivate ideas, document learning journeys, and share discoveries. 
          You'll find technical insights, creative experiments, and reflections on the intersection of technology and life.
        </p>
        <p class="text-stone-600 leading-relaxed-reading">
          Whether you're here for the code, the thoughts, or just browsing, I hope you find something that sparks your curiosity.
        </p>
      </div>
    </div>
  </section>
</BaseLayout>
