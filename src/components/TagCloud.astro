---
import type { TagInfo } from '../lib/tags';

interface Props {
  tags: TagInfo[];
  minSize?: number; // rem
  maxSize?: number; // rem
}

const { tags = [], minSize = 0.9, maxSize = 1.9 } = Astro.props as Props;

// compute min/max counts
const counts = tags.map(t => t.count);
const minCount = counts.length ? Math.min(...counts) : 0;
const maxCount = counts.length ? Math.max(...counts) : 0;

function normalizedSize(count: number) {
  if (minCount === maxCount) return (minSize + maxSize) / 2;
  const ratio = (count - minCount) / (maxCount - minCount);
  return minSize + ratio * (maxSize - minSize);
}

// optional color palette - map some known tags to colors, fallback to neutral
const colorMap: Record<string, string> = {
  javascript: 'bg-yellow-100 text-yellow-800 hover:bg-yellow-200',
  python: 'bg-green-100 text-green-800 hover:bg-green-200',
  css: 'bg-purple-100 text-purple-800 hover:bg-purple-200',
  astro: 'bg-orange-100 text-orange-800 hover:bg-orange-200',
  'machine learning': 'bg-red-100 text-red-800 hover:bg-red-200',
  'web-dev': 'bg-yellow-100 text-yellow-800 hover:bg-yellow-200',
  til: 'bg-indigo-100 text-indigo-800 hover:bg-indigo-200',
  typescript: 'bg-blue-100 text-blue-800 hover:bg-blue-200',
  docker: 'bg-cyan-100 text-cyan-800 hover:bg-cyan-200',
  git: 'bg-gray-100 text-gray-800 hover:bg-gray-200',
};

function classesFor(tag: string) {
  const key = tag.toLowerCase();
  return colorMap[key] ?? 'bg-slate-100 text-slate-800 hover:bg-slate-200';
}
---

<!-- Tag cloud with responsive refinements and subtle animations -->
<div class="flex flex-wrap gap-3 items-center tag-cloud">
  {tags.map((t, i) => {
    const size = normalizedSize(t.count).toFixed(3);
    const colorCls = classesFor(t.tag);
    return (
      <a
        href={`/tags/${t.slug}`}
        class={`tag-item inline-flex items-center gap-2 px-3 py-1.5 rounded-full transition-transform duration-200 ease-out transform ${colorCls} focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-1 focus-visible:ring-indigo-200`}
        style={`--tag-size: ${size}rem; --i: ${i}; font-size: var(--tag-size);`}
        title={`${t.tag} â€” ${t.count} posts`}
      >
        <span class="font-medium leading-none">{t.tag}</span>
        <span class="ml-2 opacity-80 text-xs tabular-nums">({t.count})</span>
      </a>
    );
  })}
</div>

<style>
/* Scoped styles for tag cloud:
   - responsive scaling using the --tag-size variable
   - staggered subtle entrance animation
   - motion-safe hover transform
*/
.tag-cloud {
  display: flex;
  flex-wrap: wrap;
  gap: 0.75rem; /* matches gap-3 */
  align-items: center;
}

/* initial state and entrance animation */
.tag-cloud .tag-item{
  opacity: 0;
  transform: translateY(6px) scale(0.995);
  box-shadow: 0 0 0 rgba(0,0,0,0);
  animation: tagFadeUp 360ms cubic-bezier(.2,.9,.3,1) both;
  animation-delay: calc(var(--i) * 40ms);
  transition: transform 180ms ease-out, box-shadow 180ms ease, background-color 150ms, opacity 180ms;
}

/* Respect user motion preferences */
@media (prefers-reduced-motion: reduce) {
  .tag-cloud .tag-item {
    animation: none;
    transition: none;
    opacity: 1;
    transform: none;
  }
}

/* Responsive font-size adjustments for small screens */
@media (max-width: 640px) {
  .tag-cloud .tag-item {
    font-size: calc(var(--tag-size) * 0.94);
    padding-left: 0.6rem;
    padding-right: 0.6rem;
  }
}
@media (max-width: 420px) {
  .tag-cloud .tag-item {
    font-size: calc(var(--tag-size) * 0.86);
    padding-top: 0.32rem;
    padding-bottom: 0.32rem;
    gap: 0.4rem;
  }
}

/* Hover/focus states (only if motion allowed) */
@media (prefers-reduced-motion: no-preference) {
  .tag-cloud .tag-item:hover,
  .tag-cloud .tag-item:focus-visible {
    transform: translateY(-2px) scale(1.04);
    box-shadow: 0 6px 18px rgba(16,24,40,0.06);
  }
  .tag-cloud .tag-item:active {
    transform: translateY(0) scale(0.99);
  }
}

/* entrance keyframes */
@keyframes tagFadeUp {
  from {
    opacity: 0;
    transform: translateY(6px) scale(0.995);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

/* accessibility: ensure contrast for count badge */
.tag-cloud .tag-item .tabular-nums {
  font-variant-numeric: tabular-nums;
  opacity: 0.9;
}
</style>
